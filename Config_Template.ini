; Load Test Script - Configuration File Template v2.0 - 23 May 2014
; Author: Oliver Thomas
; Contact: oliver.thomas@ee.co.uk

; ================================================================================================
; OVERVIEW
; ================================================================================================
; This file contains all necessary settings for running a load test using the TestLauncher.py python script.
; The Python script places no limit on the number of UEs that can be configured. 
; Limitation might arise however from the multi-UE license on Nemo (if recording), or the OS (Windows), CPU etc..
; The syntax is standard Windows .ini syntax.
;
; ================================================================================================
; TEST PRE-REQUISITES
; ================================================================================================
; Before starting a test using the TestLauncher.py script, the following must be in place:
; - All UEs under test must be attached and have an EPS bearer / PDP context. i.e. they must have an active interface with an IP address in Windows.
; - Preferably, all interfaces in use by the UEs will be re-named in Windows to something more user friendly. 
; - i.e. It's a good idea to re-name "Local Area Connection 4" to "UE2" etc..
; - The script will not perform any RF functions so if particular UEs need to be served by particular cells, or certain other RF conditions must prevail, then it is the responsibility of the tester to sort that out before starting the script. It would be great in future if the script could help in this area, but it is extremely difficult to script and so is unlikely to happen.
;
; ================================================================================================
; CONFIG FILE INSTRUCTIONS
; ================================================================================================
; - There is a special 'Globals' section for parameters that affect the whole test. Some default values are defined in the code in case this is missing.
; - Each UE config section must be named '[UE#]' where # = the UE number
; - Each UE's test program is carried out in a separate sub-process with individual timing. All time parameters are in seconds from the start of the test. The timings are different depending on whether a TCP or UDP test is being run:
; [UDP]
;   - At 't0' seconds after the start of the script (0 = immediately), the test begins, by generating the throughput as specified by 't0**Throughput'
;     - Where ** = either DL or UL (or both if running a simultaneous test)
;   - At 't1' seconds after the start of the script, the 2nd phase of the test begins, by generating the throughput as specified by 't1**Throughput'
;     - Where ** = either DL or UL (or both if running a simultaneous test)
;   - At 't2' seconds after the start of the script, the test is ended.
; [TCP]
;   - At 't0' seconds after the start of the script (0 = immediately), the test begins
;   - At 't1' seconds after the start of the script, the test ends.
;
; - The ftpServer parameter is in the form of a comma-delimited triplet of IP address, username, and password.
; - FOR DETAILED INFORMATION ON THE MECHANICS OF THE SCRIPT 'UNDER THE BONET', SEE THE SOURCE FILES: TestLauncher.py, TestInstance.py, SysEnvironment.py etc...
;
; ================================================================================================
; EXAMPLE CONFIGURATION (CAN BE COPIED)
; ================================================================================================
; The following is an example section for Globals and for UE1. this can be copied, pasted and modified, to create the other UE configs.
; In this example:
; - iperf server and client logs will be generated and saved to C:\loadtest\etc...
; - All log file names will start with the prefix 'OliTest1-'
; - The test will start immediately (t0 = 0)
; - The test will then cause the FTP server, using iPerf, to send 5Mbps of UDP packets in the downlink, to the UE, for 20 seconds
; - At the same time, the Windows machine will send 2Mbps in the uplink to the FTP server
; - At t1: 10Mbps of UDP packets in the DL will be sent, and 5Mbps in the UL, for another 20 seconds (t2 = 40)
; - Total test run time = 40 seconds.

[Globals]
baselogdir:			C:\\loadtest
; Enter directory for log storage, use double slashes!
; Default = C:\\loadTestLogs
logging:			1
; Do you want logs? (1 = Yes | 0 = No)
; Default = 1 (Yes)
logprefix:			OliTest1-
; log file name prefix. can be left empty. If no Globals defined, prefix is 'undefined'

[UE1]
; The UE ID should follow the section name, i.e. IF section = UE1, then ueId = 1, IF section = UE2, ueId = 2 etc..
ueId:				1
; Test type can only be one of DL, UL or SIM
testType:			SIM
; Traffic type can be either UDP or TCP
trafficType:		UDP
; Adapter name must exactly match the Windows name of the adapter for this UE. For convenience, it is a good idea to re-name the adapter in 
; Windows to something meaningful. Here, I have re-named the adapters 'UE1', 'UE2' etc.
; The script uses this adapter name to obtain the UE's IP address from the system.
adapterName:		UE1
; Timings are in seconds since the beginning of the test. See above for details.
t0:					0
t1:					40
; t2 only applies to UDP tests which consist of 2 phases. a TCP test will stop at t1
t2:					200
; Throughputs are in the format accepted by iPerf. i.e. 5kbps = 5K, 4Mbps = 4M etc.
; Throughputs are only relevant for UDP traffic type
; DL Throughputs:
t0DLThroughput:		32M
t1DLThroughput:		32M
; UL Throughputs:
t0ULThroughput:		2M
t1ULThroughput:		2M
; Packet lengths specify the size of each UDP packet generated by iperf
; Packet lengths are only relevant for UDP traffic type
; DL Packet lengths
t0DLLen:			1200B
t1DLLen:			1200B
; UL Packet lengths
t0ULLen:			1200B
t1ULLen:			1200B
; The ftpServer parameter is in the form of a comma-delimited triplet of IP address, username, and password. See above for details.
ftpServer:			10.249.32.132,performance,performance
